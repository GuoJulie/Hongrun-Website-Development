<module>
<baseinfo>
name=畅言评论模块
team=织梦团队
time=2014-02-17
email=tianya@desdev.cn
url=http://www.dedecms.com
hash=606c658db048ea7328ffe1c7ae2a732f
indexname=
indexurl=
ismember=0
autosetup=1
autodel=1
lang=gb2312
moduletype=soft
</baseinfo>
<systemfile>
<menustring>
PG06dG9wIG5hbWU9J7Op0dTGwMLbJyBkaXNwbGF5PSdibG9jayc+DQo8bTppdGVtIG5hbWU9J7Op0dTEo7/pJyBsaW5rPSdjaGFuZ3lhbl9tYWluLnBocCcgcmFuaz0nc3lzX0ZlZWRiYWNrJyB0YXJnZXQ9J21haW4nLz4NCjxtOml0ZW0gbmFtZT0nxsDC27ncwO0nIGxpbms9J2NoYW5neWFuX21haW4ucGhwP2RvcG9zdD1tYW5hZ2UnIHJhbms9J3N5c19GZWVkYmFjaycgdGFyZ2V0PSdtYWluJy8+DQo8bTppdGVtIG5hbWU9J8r9vt3Ns7zGJyBsaW5rPSdjaGFuZ3lhbl9tYWluLnBocD9kb3Bvc3Q9c3RhdCcgcmFuaz0nc3lzX0ZlZWRiYWNrJyB0YXJnZXQ9J21haW4nLz4NCjxtOml0ZW0gbmFtZT0ntbzI67W8s/YnIGxpbms9J2NoYW5neWFuX21haW4ucGhwP2RvcG9zdD1pbXBvcnQnIHJhbms9J3N5c19GZWVkYmFjaycgdGFyZ2V0PSdtYWluJy8+DQo8bTppdGVtIG5hbWU9J7Op0dTJ6NbDJyBsaW5rPSdjaGFuZ3lhbl9tYWluLnBocD9kb3Bvc3Q9c2V0dGluZycgcmFuaz0nc3lzX0ZlZWRiYWNrJyB0YXJnZXQ9J21haW4nLz4NCjwvbTp0b3A+
</menustring>
<readme>
PHAgc3R5bGU9J2xpbmUtaGVpZ2h0OjE1MCUnPjxwIHN0eWxlPSdsaW5lLWhlaWdodDoxNTAlJz48ZGl2IHN0eWxlPSdwYWRkaW5nLWxlZnQ6MjBweDtsaW5lLWhlaWdodDoxNTAlJz48YnIgLz48YnIgLz4NCjxwPrDmyKjL+dPQIChjKTIwMDMtMjAxMaOsRGVkZUNtcy5jb20gsaPB9Mv509DIqMD7oaMgPC9wPjxiciAvPjxiciAvPg0KPHA+uNDQu8T60aHU8davw87E2sjdudzA7c+1zbOjqNLUz8K88rPGRGVkZUNtc6Opo6xEZWRlQ21zysfEv8ewufrE2tfux7+086Gi1+7OyLaotcTW0NCh0M3DxbunzfjVvr2oyei94r72t72wuNau0rujrL7T09ogUEhQICsgTXlTUUwgtcS8vMr1v6q3oqOsyKuyv9S0wuu/qrfFoaNEZWRlQ21zILXEudm3vc341rfKx6O6IHd3dy5kZWRlY21zLmNvbSAgvbvB98LbzLOjuiBiYnMuZGVkZWNtcy5jb208L3A+PGJyIC8+PGJyIC8+DQo8cD7OqsHLyrnE49X9yLeyorrPt6i1xMq508OxvsjtvP6jrMfrxOPU2sq508PHsM7xsdjUxLbBx+Wz/s/Cw+a1xNCt0unM9b/uo7o8L3A+PGJyIC8+PGJyIC8+DQo8cD48c3Ryb25nPtK7oaKxvsrayKjQrdLpysrTw8fSvfbKytPD09ogRGVkZUNtcyA1LngueCCw5rG+o6xEZWRlQ21zudm3vbbUsb7K2sio0K3S6bXE1+7W1b3iys3IqKGjIDwvc3Ryb25nPjwvcD48YnIgLz48YnIgLz4NCjxwPjxzdHJvbmc+tv6hotCt0unQ7b/JtcTIqMD7IDwvc3Ryb25nPjxiciAvPjxiciAvPjxiciAvPg0KICAxoaLE+r/J0tTU2s3qyKvX8crYsb7X7tbV08O7p8rayKjQrdLptcS7+bShyc+jrL2rsb7I7bz+06bTw9Pat8fJzNK108PNvqOstviyu7HY1qe4tsjtvP6w5sioytrIqLfR08OhoyA8YnIgLz48YnIgLz48YnIgLz4NCiAgMqGixPq/ydLU1NrQrdLpuea2qLXE1LzK+LrNz97Wxre2zqfE2tDeuMQgRGVkZUNtcyDUtLT6wuu78r3nw+a357jx0tTKytOmxPq1xM341b7SqsfzoaMgPGJyIC8+PGJyIC8+PGJyIC8+DQogIDOhosT607XT0Mq508OxvsjtvP65ub2otcTN+NW+yKuyv8TayN3L+dPQyKijrLKitsDBorPQtaPT69Xi0KnE2sjdtcTP4LnYt6jCydLlzvGhoyA8YnIgLz48YnIgLz48YnIgLz4NCjShorvxtcPJzNK1ytrIqNauuvOjrMT6v8nS1L2rsb7I7bz+06bTw9PayczStdPDzb6jrM2syrHSwL7dy/m5usLytcTK2siowODQzdbQyLe2qLXEvLzK9dans9bE2sjdo6zX1Lm6wvLKsb/MxvCjrNTavLzK9dans9bG2s/exNrTtdPQzai5/da4tqi1xLe9yr278bXD1ri2qLe2zqfE2rXEvLzK9dans9a3/s7xoaPJzNK1ytrIqNPDu6fP7dPQt7TTs7rNzOGz9tLivPu1xMiowaajrM/gudjS4rz7vauxu9f3zqrK19Kqv7zCx6OstavDu9PQ0ru2qLG7ssnEybXEs9DFtbvysaPWpKGjIDwvcD48YnIgLz48YnIgLz4NCjxwPjxzdHJvbmc+tv6hotCt0um55raotcTUvMr4us3P3tbGIDwvc3Ryb25nPjxiciAvPjxiciAvPjxiciAvPg0KICAxoaLOtLvxyczStcrayKjWrsewo6yyu7XDvauxvsjtvP7Tw9PayczStdPDzb6jqLD8wKi1q7K7z97T2sbz0rXN+NW+oaK+rdOq0NTN+NW+oaLS1NOqwPvOqsS/tcS78sq1z9bTr8D7tcTN+NW+o6mho7m6wvLJzNK1ytrIqMfrtcfCvSBiYnMuZGVkZWNtcy5jb20gwcu94tfu0MLLtcP3oaMgPGJyIC8+PGJyIC8+PGJyIC8+DQogIDKhos60vq252be90O2/yaOssru1w7bUsb7I7bz+u/LT69auudjBqrXEyczStcrayKi9+NDQs/bX4qGis/bK26GitdbRurvyt6K3xdfT0O2/ydakoaMgPGJyIC8+PGJyIC8+PGJyIC8+DQogIDOhorK7udzE47XEzfjVvsrHt/HV+8zlyrnTwyBEZWRlQ21zIKOsu7nKx7K/t93AuMS/yrnTwyBEZWRlQ21zo6zU2sTjyrnTw8HLIERlZGVDbXMgtcTN+NW+1vfSs8nPsdjQ67zTyc8gRGVkZUNtcyC52be9zfjWtyh3d3cuZGVkZWNtcy5jb20ptcTBtL3ToaMgPGJyIC8+PGJyIC8+PGJyIC8+DQogIDShos60vq252be90O2/yaOsvfvWudTaIERlZGVDbXMgtcTV+8zlu/LIzrrOsr+31rv5tKHJz9LUt6LVucjOus7Fycn6sOaxvqGi0N64xLDmsb678rXayP23vbDmsb7Tw9Pa1tjQwrfWt6KhoyA8YnIgLz48YnIgLz48YnIgLz4NCjWhosjnufvE+s60xNzX8crYsb7QrdLptcTM9b/uo6zE+rXEytrIqL2rsbvW1da5o6zL+bG70O2/ybXEyKjA+72rsbvK1bvYo6yyorPQtaPP4NOmt6jCydTwyM6hoyA8L3A+PGJyIC8+PGJyIC8+DQo8cD48c3Ryb25nPsj9oaLT0M/etaOxo7rNw+LU8Mn5w/cgPC9zdHJvbmc+PGJyIC8+PGJyIC8+PGJyIC8+DQogIDGhorG+yO28/rywy/m4vbT4tcTOxLz+ysfX986qsrvM4bmpyM66zsP3yLe1xLvy0v66rLXExeKzpbvytaOxo7XE0M7Kvczhuam1xKGjIDxiciAvPjxiciAvPjxiciAvPg0KICAyoaLTw7uns/bT2tfU1Li2+Mq508OxvsjtvP6jrMT6sdjQ68HLveLKudPDsb7I7bz+tcS358/Vo6zU2snQzrS5usLysvrGt7y8yvW3/s7x1q7HsKOsztLDx7K7s9DFtbbUw+K30dPDu6fM4bmpyM66ztDOyr21xLy8yvXWp7PWoaLKudPDtaOxo6Os0rKyu7PQtaPIzrrO0vLKudPDsb7I7bz+tviy+sn6zsrM4rXEz+C52NTwyM6hoyA8YnIgLz48YnIgLz48YnIgLz4NCiAgM6GitefX087Esb7Qzsq9tcTK2sio0K3S6cjnzazLq7e9yunD5sepyvC1xNCt0unSu9H5o6y+39PQzerIq7XEus21yM2stcS3qMLJ0KfBpqGjxPrSu7Wpv6rKvMi3yM+xvtCt0umyorCy17AgRGVkZUNtc6OsvLSxu8rTzqrN6sirwO294rKivdPK3LG+0K3S6bXEuPfP7sz1v+6jrNTaz+3T0MnPyvbM9b/uytrT6LXEyKjBprXEzazKsaOsyty1vc/gudi1xNS8yvi6zc/e1saho9Ct0unQ7b/Jt7bOp9LUzeK1xNDQzqqjrL2r1rG9086lt7SxvsrayKjQrdLpsqK5ubPJx9bIqKOsztLDx9PQyKjL5sqx1tXWucrayKijrNTwwe7No9a5y/C6pqOssqKxo8H017e+v8/gudjU8MjOtcTIqMGmoaMgPGJyIC8+PGJyIC8+PGJyIC8+DQo0oaLI57n7sb7I7bz+tPjT0Mbky/zI7bz+tcTV+7rPQVBJyr63tsD919Ow/KOs1eLQqc7EvP6w5siosrvK9NPasb7I7bz+udm3vaOssqLH0tXi0KnOxLz+ysfDu76tuf3K2siot6KyvLXEo6zH67LOv7zP4LnYyO28/rXEyrnTw9Dtv8m6z7eotcTKudPDoaM8L3A+PGJyIC8+PGJyIC8+DQo8cD7QrdLpt6KyvMqxvOSjuiAgMjAwN8TqMTLUwjHI1SBCeSBEZWRlQ21zLmNvbTwvcD48YnIgLz48YnIgLz4NCjxwPjwvcD48L3A+PC9wPg==
</readme>
<setupsql40>
RFJPUCBUQUJMRSBJRiBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgICgNCiAgYHNrZXlgIHZhcmNoYXIoMjU1KSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBgc3ZhbHVlYCB0ZXh0IE5PVCBOVUxMLA0KICBgc3RpbWVgIGludCgxMCkgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZIChgc2tleWApDQopIFRZUEU9TXlJU0FNOw0KSU5TRVJUIElOVE8gYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgIChgc2tleWAsIGBzdmFsdWVgLCBgc3RpbWVgKSBWQUxVRVMNCignYXBwaWQnLCAnMCcsIDApLA0KKCdpZCcsICcwJywgMCksDQooJ2lzdl9pZCcsICcwJywgMCksDQooJ3VzZXInLCAnMCcsIDApLA0KKCdwd2QnLCAnMCcsIDApOw==
</setupsql40>
<delsql>
RFJPUCBUQUJMRSBJRiBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgOw0KRFJPUCBUQUJMRSBJRiBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX2ltcG9ydGlkc2A7DQpEUk9QIFRBQkxFIElGIEVYSVNUUyBgI0BfX3BsdXNfY2hhbmd5YW5faW5zZXJ0aWRzYDs=
</delsql>
<setup>

</setup>
<uninstall>

</uninstall>
<oldfilelist>
../include/helpers/changyan.helper.php
../include/taglib/changyan.lib.php
changyan_main.php
</oldfilelist>
</systemfile>

<modulefiles>
<file type='file' name='../include/helpers/changyan.helper.php'>

</file>
<file type='file' name='../include/taglib/changyan.lib.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCdSZXF1ZXN0IEVycm9yIScpOw0KDQpoZWxwZXIoJ2NoYW5neWFuJyk7DQpoZWxwZXIoJ2NhY2hlJyk7DQokR0xPQkFMU1snY2hhbmd5YW5fY291bnRfanMnXSA9IGlzc2V0KCRHTE9CQUxTWydjaGFuZ3lhbl9jb3VudF9qcyddKT8gJEdMT0JBTFNbJ2NoYW5neWFuX2NvdW50X2pzJ10gOiBGQUxTRTsNCmZ1bmN0aW9uIGxpYl9jaGFuZ3lhbigmJGN0YWcsJiRyZWZPYmopDQp7DQogICAgZ2xvYmFsICRkc3FsLCAkZW52czsNCiAgICAvL8r00NS0psDtDQogICAgJGF0dGxpc3Q9InR5cGV8Y29kZSxjb25maWd8LGNsYXNzfF9ERURFQ1ksc3R5bGV8IjsNCiAgICBGaWxsQXR0c0RlZmF1bHQoJGN0YWctPkNBdHRyaWJ1dGUtPkl0ZW1zLCRhdHRsaXN0KTsNCiAgICBleHRyYWN0KCRjdGFnLT5DQXR0cmlidXRlLT5JdGVtcywgRVhUUl9TS0lQKTsNCiAgICANCiAgICAkcmV2YWw9IiI7DQogICAgDQogICAgaWYoICEkZHNxbC0+SXNUYWJsZSgiI0BfX3BsdXNfY2hhbmd5YW5fc2V0dGluZyIpICkgcmV0dXJuICfDu7Cy17CzqdHUxKO/6Sc7DQogICAgDQogICAgJGNsaWVudF9pZD1jaGFuZ3lhbl9nZXRfc2V0dGluZygnYXBwaWQnKTsNCiAgICBpZihlbXB0eSgkY2xpZW50X2lkKSkgcmV0dXJuICfJ0M6016Ky4bOp0dTVyrrFo6zH67W9uvPMqNeisuEnOw0KICAgIA0KICAgIGlmKCR0eXBlPT0nY29kZScgT1IgJHR5cGU9PSdjb2RlMicpDQogICAgew0KICAgICAgICAkcmV2YWwuPSI8ZGl2IGNsYXNzPSd7JGNsYXNzfScgc3R5bGU9J3skc3R5bGV9Jz4iOw0KICAgICAgICAkcHJlZml4ID0gJ2NoYW5neWFuJzsNCiAgICAgICAgJGtleSA9ICdjb2RlJzsNCiAgICAgICAgJHJvdyA9IEdldENhY2hlKCRwcmVmaXgsICRrZXkpOw0KDQogICAgICAgIGlmKCFpc19hcnJheSgkcm93KSkNCiAgICAgICAgew0KICAgICAgICAgICAgJGFwcGlkPWNoYW5neWFuX2dldF9zZXR0aW5nKCdhcHBpZCcpOw0KICAgICAgICAgICAgJHVzZXI9Y2hhbmd5YW5fZ2V0X3NldHRpbmcoJ3VzZXInKTsNCiAgICAgICAgICAgICRzaWduPWNoYW5neWFuX2dlbl9zaWduKCR1c2VyKTsNCiAgICAgICAgICAgICRyZXN1bHQgPSBjaGFuZ3lhbl9nZXRjb2RlKENIQU5HWUFOX0NMSUVOVF9JRCwgJHVzZXIsIGZhbHNlLCAkc2lnbiwgJGFwcGlkKTsNCiAgICAgICAgICAgIGlmICggJHJlc3VsdFsnc3RhdHVzJ10gPT0gMSkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJ860u/HIobOp0dS0+sLro6y07c7zz/vPoqO6Jy4kcmVzdWx0Wydtc2cnXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRyb3dbJ3JldmFsJ10gPSBkZWRlX2h0bWxzcGVjaWFsY2hhcnMoJHJlc3VsdFsnY29kZSddKTsNCiAgICAgICAgICAgIFNldENhY2hlKCRwcmVmaXgsICRrZXksICRyb3csIDYwKjYwKjEpOw0KICAgICAgICB9DQogICAgICAgIA0KICAgICAgICBpZighZW1wdHkoJGNvbmZpZykpDQogICAgICAgIHsNCiAgICAgICAgICAgICRjb25maWdfYXJyID0gYXJyYXkoKTsNCiAgICAgICAgICAgICRjb25maWdzID0gZXhwbG9kZSgnLCcsICRjb25maWcpOw0KICAgICAgICAgICAgaWYoY291bnQoJGNvbmZpZ3MpPjApDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgZm9yZWFjaCgkY29uZmlncyBhcyAkYykgew0KICAgICAgICAgICAgICAgICAgICAkaXRlbSA9IGV4cGxvZGUoJzonLCAkYyk7DQogICAgICAgICAgICAgICAgICAgICRjb25maWdfYXJyWyRpdGVtWzBdXSA9ICRpdGVtWzFdOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRjb25maWdfc3RyID0ganNvbl9lbmNvZGUoJGNvbmZpZ19hcnIpOw0KICAgICAgICAgICAgJHJldmFsIC49IDw8PEVPVA0KPHNjcmlwdD4NCiAgICB2YXJfY29uZmlnPXskY29uZmlnX3N0cn07DQo8L3NjcmlwdD4NCkVPVDsNCiAgICAgICAgfQ0KICAgICAgICAkcmV2YWwgLj0gaHRtbHNwZWNpYWxjaGFyc19kZWNvZGUoJHJvd1sncmV2YWwnXSk7DQogICAgICAgICRyZXZhbD1zdHJfcmVwbGFjZSgiaWQ9J1NPSFVDUyciLCAiaWQ9J1NPSFVDUycgc2lkPSd7JHJlZk9iai0+QXJjSUR9JyIsICRyZXZhbCk7DQogICAgICAgIGlmKCR0eXBlPT0nY29kZTInKSAkcmV2YWw9cHJlZ19yZXBsYWNlKCIjd2luZG93LlNDU19OT19JRlJBTUVbIF0/PVsgXT90cnVlOyNpIiwgIiIsICRyZXZhbCk7DQogICAgICAgICRyZXZhbD1zdHJfcmVwbGFjZSgiPHNjcmlwdD4iLCAiPC9kaXY+PHNjcmlwdD4iLCAkcmV2YWwpOw0KICAgIH0gZWxzZWlmKCR0eXBlPT0nY291bnQnKSB7DQogICAgICAgIGlmKCEkR0xPQkFMU1snY2hhbmd5YW5fY291bnRfanMnXSkgJHJldmFsLj0iPHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cDovL2Fzc2V0cy5jaGFuZ3lhbi5zb2h1LmNvbS91cGxvYWQvcGx1Z2lucy9wbHVnaW5zLmNvdW50LmpzXCI+PC9zY3JpcHQ+IjsNCiAgICAgICAgJHJldmFsLj0iPGEgaHJlZj1cIiNTT0hVQ1NcIiBpZD1cImNoYW5neWFuX2NvdW50X3VuaXRcIj48L2E+IjsNCiAgICAgICAgJEdMT0JBTFNbJ2NoYW5neWFuX2NvdW50X2pzJ10gPSBUUlVFOw0KICAgIH0NCiAgICANCiAgICByZXR1cm4gJHJldmFsOw0KfQ0K
</file>
<file type='file' name='changyan_main.php'>

</file>
</modulefiles>
</module>
